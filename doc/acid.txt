*acid.txt*	Asynchronous Clojure Interactive Development

Author:  hkupty <hkupty@gmail.com>
Version: 1.1
License: 

==============================================================================
CONTENTS					*acid-contents*

INTRODUCTION					|acid-introduction|
INSTALL						|acid-install|
COMMANDS					|acid-command|
DEFAULT MAPPINGS				|acid-mapping|
CONFIGURATIONS					|acid-configuration|
CREDITS						|acid-credits|

==============================================================================
INTRODUCTION					*acid-introduction*

*Acid.nvim* is a plugin for clojure development on neovim. It was initially
designed within iron.nvim (http://github.com/clojure-vim/iron.nvim),
but evolved to be a proper clojure plugin for neovim.

It is built fundamentally on neovims async capabilities and rely deeply on
clojures refactor-nrepl (https://github.com/clojure-emacs/refactor-nrepl) and
nrepl-python-client (https://github.com/cemerick/nrepl-python-client).


==============================================================================
INSTALL						*acid-install*

First, install the python dependencies:
>
	pip3 install --user neovim
<

Then, add and install acid:
>
	Plug 'clojure-vim/acid.nvim'
<

Since acid is a remote plugin, its bindings must be generated by neovim.
>
	:UpdateRemotePlugins
<

Update your `~/.lein/profiles.clj` adding the following lines:
>
	[refactor-nrepl "2.3.0-SNAPSHOT"]
	[cider/cider-nrepl "0.14.0"]
<

==============================================================================
COMMANDS					*acid-command*

AcidNewFile <ns.file>				*AcidNewFile*
	Creates a new file under supplied ns.name.

AcidNewFilePrompt				*AcidNewFilePrompt*
	Prompts for the full filename for creation.

AcidLoadAll					*AcidLoadAll*
	Loads all project namespaces into the nrepl for easier navigation.

AcidRequire [<require> [<options>]]		*AcidRequire*
	Requires a namespace.
	If no parameters supplied, loads current ns.

	Arguments supplied can be the same as a require vector, taking options:
>
	AcidRequire clojure.string :as str
	AcidRequire clojure.string :refer [join]
<

AcidDoc <ns/symbol>				*AcidDoc*
	Shows the documentation of the supplied symbol.

There are a few more which are unstable and/or incomplete.


==============================================================================
DEFAULT MAPPINGS				*acid-mapping*

{key}		{function}
--------	------------------------
<leader>N	Creates a new file (`AcidNewFile`)
K		Shows documentation for the symbol below cursor (`AcidDoc`)
car		Requires current file (`AcidRequire`)
caR		Requires dependency line below cursor (`AcidRequire`)
gu		Shows usage of symbol below cursor (`AcidFindUsage`)
gd		Goes to definition of symbol below cursor (`AcidGoto`)
cp<motion>	Sends the block to nrepl for evaluation (`AcidEval`)
cpp		Evaluating the whole block below cursor (`AcidEval`)


==============================================================================
CONFIGURATIONS					*acid-configuration*

g:acid_loaded					*g:acid_loaded*
	Default: 1

g:acid_log_messages				*g:acid_log_messages*
	Default: 0

g:acid_auto_require				*g:acid_auto_require*
	Default: 1

g:acid_auto_start_repl				*g:acid_auto_start_repl*
	Default: 0

g:acid_sessions					*g:acid_sessions*
	Default: []

g:acid_namespace				*g:acid_namespace*
	Default: 'user'

g:acid_start_repl_fn				*g:acid_start_repl_fn*
	Default: 'jobstart'

g:acid_start_repl_args				*g:acid_start_repl_args*
	Default: ['lein repl']


==============================================================================
CREDITS						*acid-credits*




==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
